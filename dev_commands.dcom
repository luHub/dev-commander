#AWK
awk '{ print substr( $0, 1, length($0)-2 ) }' 
awk '!seen[$0]++'
awk '{print substr($0, 1, length($0)-1) ";" substr($0, length($0), 1)}' filename > newfile

#AWS
aws sqs receive-message --queue-url [url] --attribute-names All --message-attribute-names All --max-number-of-messages [max_num]
aws ecr describe-repositories --profile [aws_profile] --region [aws_region]
aws ecs execute-command --region [aws_region] --cluster [aws_cluster] --task [aws_ecs_task] --container [aws_ecs_task_container] --interactive --command "/bin/sh" 
aws ecr get-login-password --region [aws_region] | docker login --username AWS --password-stdin [aws_account_id].dkr.ecr.region.amazonaws.com
aws ecs list-clusters --region [aws_region]
aws ecs list-tasks --region [aws_region]  --cluster [aws_ecs_cluster] 


#Docker
sudo service docker start
docker run
docker build
docker container ps
docker image prune

#GC
gcloud auth application-default login

#Git
git branch -d [local_branch]
git branch -D [local_branch]
git branch -r
git checkout -b [local_branch] [origin/remote_branch]
git checkout -b [branch_name]
git checkout [source_branch] [file_path]
git checkout --theirs [files]
git clone [repository]
git commit --no-verify  -am
git diff
git fetch 
git fetch --all
git merge [local_branch]
git merge [upstream/remote_branch]
git log [branch]
git log --stat [branch]
git push -u origin [branch]
git pull
git pull --rebase
git pull upstream master
git status
git stash 
git reset --hard [origin/remote_branch]
git cherry-pick [commit_id]
git cherry-pick --abort 

#Java
java --version

#Linux Env
export [name]=[value]

#Linux Files
cat [file1] [file2] >> file3 
find [directory] -name [name]
find [directory] -name [name] | xargs less
grep -r [pattern] [directory]

#Linux System
date
date +%s
tail -f /var/log/syslog

#Linux Networking
ipconfig
nslookup
ping
openssl s_cleint -verify 2 -connect [domain]:[port] -tls1_2 -debug   
traceroute
telnet [host] [port]
sudo netstat -lntp | grep dockerd


#Linux Processes
ps -eaf
systemctl [start|stop|restart] [pattern...|pid...]

#Maven
mvn clean install

#Parquet
parquet-tools 


#Podman
podman build
podman image ls
podman run [repository]
porman run --name [name] -p [port:port] [repository]
podman system prune
podman system prune --all --force && podman rmi --all --force
podman exec -it [container] /bin/bash
podman pull [repository]
systemctl --user status  podman.socket
systemctl --user status  podman.service



#Terraform
terraform init
terraform plan
terraform import 
terraform workspace show
terraform workspace 
terraform workspace list
terraform workspace select [name]
TF_LOG=DEBUG TF_LOG_PATH=[path] terraform plan
terraform fmt

#sqlite
sqlite [DB_FILE]
sqlite >> .tables
